八叉树（Octree）是一种用于描述三维空间的树状数据结构。
八叉树的每个节点表示一个正方体的体积元素，每个节点有八个子节点，这八个字节点所表示的体积元素加起来就等于父节点的体积。
一般中心点作为节点的分叉中心。八叉树是一种用于管理稀疏3D点云的树状数据结构，每个内部节点正好有八个子节点。
可实现  体素内近邻搜素  K近邻搜索  半径近邻搜索
树中任一节点的子节点恰好只会有八个，或零个，也就是子节点不会有0与8以外的数目。
------------------------------------------搭建八叉树-------------------------------------------------
1、设定最大递归深度。这决定了最小子空间的包围盒大小
2、以尺寸最大场景作为根节点。可以是立方体或长方体
3、依序将单位元元素丢入能包含且没有子节点的立方体。是指将你想要存储的坐标归类到所属子节点的包围盒。
4、若没达到最大递归深度，就进行细分八等份，再将该立方体所装的单位元元素全部分组给八个子立方体。
5、若发现子立方体所分配到的单位元元素数量不为0且跟父立方体一样，则该子立方体停止细分
（因为根据空间分割理论，细分的空间所得到的分配必定较少，若是一样的数目，再怎么切，数目还是一样）
6、重复3，直到达最大递归深度。
------------------------------------------作用------------------------------------------------------
八叉树的结构决定了八叉树具有的功能，由于每个元素都在树结构中，可以快速定位到各个元素，并且时间复杂度很小，可以用来碰撞检测、邻域检索、空间变化检测、压缩等功能。
优点：使用八叉树可以快速进行三维目标的集合运算，如交、并、补、差等，亦可快速进行最邻近区域或点的搜素。
缺点：存储空间消耗。

